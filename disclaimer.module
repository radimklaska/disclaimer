<?php
// $Id$
/**
 * @file
 * Create and show disclaimer for your site.
 * Visotors need js enabled and accept cookie
 *
 *
 * This module is for Drupal 5.x only.
 *
 * Module by: Mog
 * Mailto: tech@arthura.fr
 *
 */

/**
 * Implementation of hook_menu().
 */
function disclaimer_menu($may_cache) {
  $items = array();
  if ($may_cache) {
    // disclaimer page
    $items[] = array(
      'path' => 'disclaimer',
      'title' => t('Disclaimer'),
      'callback' => '_disclaimer_get_content',
      'access' => user_access('access content'),
      'type' => MENU_NORMAL_ITEM,
    );
    // configuration page of the Disclaimer module
    $items[] = array(
      'path' => 'admin/settings/disclaimer',
      'title' => t('Disclaimer'),
      'description' => t('Administer Disclaimer settings.'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('disclaimer_admin_settings'),
      'access' => user_access('administer Disclaimer settings'),
      'type' => MENU_NORMAL_ITEM,
    );
  }
  else {
    global $user;
    if (!user_access('bypass disclaimer') || (variable_get('disclaimer_logged', 1) == 1 && $user->uid)) {
        $path = drupal_get_path('module', 'disclaimer');
        $path_css = '/nyromodal/styles/nyroModal.css';
        $path_js = '/nyromodal/js/jquery.nyroModal.js';
        if (file_exists($path . $path_css)) {
          drupal_add_css(drupal_get_path('module', 'disclaimer') .'/nyromodal/styles/nyroModal.css'); 
        }
        if (file_exists($path . $path_js)) {
          drupal_add_js(drupal_get_path('module', 'disclaimer') .'/nyromodal/js/jquery.nyroModal.js');
        }
        elseif ($user->uid == 1) {
          drupal_set_message(t('Can\'t load jquery.nyroModal.js for disclaimer module. Please follow !url.', array('!url' => l('Disclaimer settings instructions on status page', 'admin/logs/status'))), 'error');
        }
        drupal_add_js(drupal_get_path('module', 'disclaimer') .'/disclaimer.js', 'module', variable_get('disclaimer_location_js', 'header'));
        drupal_add_js(_disclaimer_get_js(), 'inline', variable_get('disclaimer_location_js', 'header'));
    }
  }
  return $items;
}

/**
 * Implementation of hook_perm().
 */
function disclaimer_perm() {
  return array('administer disclaimer settings', 'bypass disclaimer');
}

/* Setup settings form for disclaimer
 * @return array an array of forms
 */
function disclaimer_admin_settings() {
  $disclaimer = _disclaimer_get_content();
  $width = variable_get('disclaimer_width', 400);
  $height = variable_get('disclaimer_height', 300);

  $form['disclaimer_preview'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('Disclaimer preview'),
  );
  $form['disclaimer_preview']['content'] = array(
    '#type' => 'markup',
    '#value' => $disclaimer,
  );
  $form['disclaimer_content'] = array(
    '#type' => 'textarea',
    '#title' => t('Disclaimer content'),
    '#rows' => 15,
    '#default_value' => variable_get('disclaimer_content', ''),
    '#description' => t('This is the body of the disclaimer, you can use HTML and choose input filter properly.'),
    '#required' => TRUE
  );
  $form['disclaimer_input_format'] = filter_form(variable_get('disclaimer_content_format', 1), NULL, array('disclaimer_input_format'));
  $form['disclaimer_content_footer'] = array(
    '#type' => 'textarea',
    '#title' => t('Disclaimer footer'),
    '#default_value' => variable_get('disclaimer_content_footer', ''),
    '#description' => t('Optional: this is the footer of the disclaimer, under ENTER/EXIT. you can use HTML and choose input filter properly.'),
  );
  $form['disclaimer_footer_input_format'] = filter_form(variable_get('disclaimer_content_footer_format', 1), NULL, array('disclaimer_footer_input_format'));
  $form['disclaimer_action'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('Disclaimer action'),
  );
  $form['disclaimer_action']['disclaimer_enter_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer enter url'),
    '#default_value' => variable_get('disclaimer_enter_url', ''),
    '#description' => t('Set the url when press Enter on disclaimer. Empty is your front page. Use Drupal system path.'),
  );
  $form['disclaimer_action']['disclaimer_exit_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer exit url'),
    '#default_value' => variable_get('disclaimer_exit_url', 'http://www.google.com'),
    '#description' => t('Set the url when press Exit on disclaimer. Default is "http://www.google.com".'),
  );
  $form['disclaimer_action']['disclaimer_action_type'] = array(
    '#type' => 'select',
    '#title' => t('Disclaimer action style'),
    '#default_value' => variable_get('disclaimer_action_type', 'text'),
    '#options' => array(
      'text' => t('Use text'),
      'image' => t('Use images'),
    ),
    '#description' => t('Select what do you want to use for "ENTER" or "EXIT" action on the disclaimer.'),
  );
  $form['disclaimer_action']['text'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#title' => t('Text settings'),
  );
  $form['disclaimer_action']['text']['disclaimer_enter_txt'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer enter text'),
    '#size' => 20,
    '#default_value' => variable_get('disclaimer_enter_txt', t('ENTER')),
    '#description' => t('Set the text for Enter action on disclaimer. Default is "ENTER"'),
  );
  $form['disclaimer_action']['text']['disclaimer_exit_txt'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer exit text'),
    '#size' => 20,
    '#default_value' => variable_get('disclaimer_exit_txt', t('EXIT')),
    '#description' => t('Set the text for Exit action on disclaimer. Default is "EXIT"'),
  );
  $form['disclaimer_action']['img'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#title' => t('Image settings'),
  );
  $form['disclaimer_action']['img']['disclaimer_enter_img'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer enter image name'),
    '#size' => 20,
    '#default_value' => variable_get('disclaimer_enter_img', 'enter.png'),
    '#description' => t('Set the image name to be used for Enter action on disclaimer. Path is relative to /files/, so the image need to be in your /files directory. Default is "enter.png"'),
  );
  $form['disclaimer_action']['img']['disclaimer_enter_img_alt'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer enter image alt/title text'),
    '#size' => 20,
    '#default_value' => variable_get('disclaimer_enter_img_alt', 'ENTER'),
    '#description' => t('Set the image alt/title text to be used for Enter action on disclaimer. Default is "Enter".'),
  );

  $form['disclaimer_action']['img']['disclaimer_exit_img'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer exit image name'),
    '#size' => 20,
    '#default_value' => variable_get('disclaimer_exit_img', 'exit.png'),
    '#description' => t('Set the image name to be used for Exit action on disclaimer. Path is relative to /files/, so the image need to be in your /files directory. Default is "exit.png"'),
  );
  $form['disclaimer_action']['img']['disclaimer_exit_img_alt'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer exit image alt/title text'),
    '#size' => 20,
    '#default_value' => variable_get('disclaimer_exit_img_alt', 'EXIT'),
    '#description' => t('Set the image alt/title text to be used for Exit action on disclaimer. Default is "Enter".'),
  );
  $form['options'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#title' => t('Disclaimer options'),
    '#description' => t('Visit !url for settings explanation.', array('!url' => l('http://nyromodal.nyrodev.com/', 'http://nyromodal.nyrodev.com/', array(), NULL, NULL, FALSE, TRUE))),
  );
  $form['options']['disclaimer_width'] = array(
    '#type' => 'textfield',
    '#title' => t('Minimum width'),
    '#field_suffix' => t('px'),
    '#default_value' => variable_get('disclaimer_width', 400),
    '#size' => 4,
    '#maxlength' => 4,
    '#description' => t('The minimum width of the lightbox containing the disclaimer. Default 400px.'),
    '#required' => TRUE
  );
  $form['options']['disclaimer_height'] = array(
    '#type' => 'textfield',
    '#title' => t('Minimum height'),
    '#field_suffix' => t('px'),
    '#default_value' => variable_get('disclaimer_height', 300),
    '#size' => 4,
    '#maxlength' => 4,
    '#description' => t('The minimum height of the lightbox containing the disclaimer. Default 300px.'),
    '#required' => TRUE
  );
  $form['options']['disclaimer_padding'] = array(
    '#type' => 'textfield',
    '#title' => t('Padding'),
    '#field_suffix' => t('px'),
    '#default_value' => variable_get('disclaimer_padding', 20),
    '#size' => 3,
    '#maxlength' => 3,
    '#description' => t('The padding of the lightbox containing the disclaimer. Default 20px.'),
    '#required' => TRUE
  );
  $form['options']['disclaimer_bgcolor'] = array(
    '#type' => 'textfield',
    '#title' => t('Background color'),
    '#field_prefix' => '#',
    '#default_value' => variable_get('disclaimer_bgcolor', '000000'),
    '#size' => 6,
    '#maxlength' => 6,
    '#description' => t('The hex color of the lightbox background. Default #000000.'),
    '#required' => TRUE
  );
  $form['advanced'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#title' => t('Disclaimer advanced options'),
  );
  $form['advanced']['disclaimer_logged'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show disclaimer when logged user came back.'),
    '#default_value' => variable_get('disclaimer_logged', 1),
    '#description' => t('Show disclaimer for auto-login user on a new session. Default is yes. Note: this option is complementary to "bypass disclaimer" access.'),
  );

  $form['advanced']['disclaimer_location_js'] = array(
    '#type' => 'select',
    '#title' => t('Javascript'),
    '#default_value' => variable_get('disclaimer_location_js', 'header'),
    '#options' => array(
      'header' => t('Header'),
      'footer' => t('Footer'),
    ),
    '#description' => t('Where the javascript is loaded. Header is default, but could be useful to load on footer for conflict with other js. Note: this is only for disclaimer javascript and not jquery.nyroModal.js'),
  );
    $form['advanced']['disclaimer_debug'] = array(
    '#type' => 'select',
    '#title' => t('Debug mode'),
    '#default_value' => variable_get('disclaimer_debug', 'false'),
    '#options' => array(
      'false' => t('False'),
      'true' => t('True'),
    ),
    '#description' => t('Debug mode for the NyroModal.'),
  );
  $form['advanced']['cookie'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#title' => t('Disclaimer cookie options'),
    '#description' => t('EXPERIMENTAL: Use with CAUTION.'),
  );
  $form['advanced']['cookie']['disclaimer_cookie_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer cookie name'),
    '#default_value' => variable_get('disclaimer_cookie_name', 'disclaimerShow'),
    '#description' => t('Set the cookie path. Default is "disclaimerShow".'),
    '#required' => TRUE
  );
  $form['advanced']['cookie']['disclaimer_cookie_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer cookie path'),
    '#default_value' => variable_get('disclaimer_cookie_path', '/'),
    '#description' => t('Set the cookie path. Default is "/" (recommended for access on all your site). Empty get server path.'),
  );
  $form['advanced']['cookie']['disclaimer_cookie_domain'] = array(
    '#type' => 'textfield',
    '#title' => t('Disclaimer cookie domain'),
    '#default_value' => variable_get('disclaimer_cookie_domain', ''),
    '#description' => t('Set the cookie domain. Empty set default server domain.'),
  );
    return system_settings_form($form);
}

/**
 * Validation function for the general configuration form.
 *
 * Ensure that numeric value are numeric... and set input format
 */
function disclaimer_admin_settings_validate($form_id, $form_values) {
  $height = $form_values['disclaimer_height'];
  $width = $form_values['disclaimer_width'];
  $padding = $form_values['disclaimer_padding'];
  $bgcolor =  $form_values['disclaimer_bgcolor'];
  
  if ($form_values['disclaimer_input_format']) {
    variable_set('disclaimer_content_format', $form_values['disclaimer_input_format']);
  }
  if ($form_values['disclaimer_footer_input_format']) {
    variable_set('disclaimer_content_footer_format', $form_values['disclaimer_footer_input_format']);
  }
  if (!empty($padding) && !is_numeric($padding)) {
    form_set_error('disclaimer_padding', t('You must enter a numeric padding.'));
  }
  if (empty($bgcolor)) {
    form_set_error('disclaimer_bgcolor', t('You must enter a bgcolor.'));
  }
  if (!empty($width) && (!is_numeric($width) || $width < 0)) {
    form_set_error('disclaimer_width', t('You must enter a width greater than 0 pixels.'));
  }
  if (!empty($height) && (!is_numeric($height) || $height < 0)) {
    form_set_error('disclaimer_height', t('You must enter a height greater than 0 pixels.'));
  }
  cache_clear_all();
}

/**
 * Declare footer hook
 * @return string A string containing HTML to be inserted
 */
function disclaimer_footer() {
  global $user;
  if (!user_access('bypass disclaimer') || (variable_get('disclaimer_logged', 1) == 1 && $user->uid)) {
    $output = '<div>'. l('&nbsp;', 'disclaimer', array('id' => 'disclaimer', 'style' => 'display:none;'), NULL, NULL, FALSE, TRUE) .'</div>';
  }
  return $output;
}

/**
 * Generate disclaimer content
 */
function _disclaimer_get_content() {
    $action_type = variable_get('disclaimer_action_type', 'text');
    $exit_url = variable_get('disclaimer_exit_url', 'http://www.google.com');
    $enter_url = variable_get('disclaimer_enter_url', '<front>');

    switch ($action_type) {
        case "image":
          $enter_alt = variable_get('disclaimer_enter_img_alt', t('ENTER'));
          $exit_alt = variable_get('disclaimer_enter_img_alt', t('ENTER'));
          $enter = theme('image', 'files/'. variable_get('disclaimer_enter_img', 'enter.png'), $enter_alt, $enter_alt);
          $exit = theme('image', 'files/'. variable_get('disclaimer_exit_img', 'exit.png'), $exit_alt, $exit_alt);
        break;
        default:
          $enter = variable_get('disclaimer_enter_txt', t('ENTER'));
          $exit = variable_get('disclaimer_exit_txt', t('EXIT'));
    }

    $enter = l($enter, $enter_url, array('onclick' => 'WriteCookie(\''. variable_get('disclaimer_cookie_name', 'disclaimerShow') .'\', \'1\');$.nyroModalRemove();'), NULL, NULL, FALSE, TRUE);
    $exit = l($exit, $exit_url, array(), NULL, NULL, FALSE, TRUE);
    $rows[] = array(
      array('data' => $enter, 'align' => 'center'),
      array('data' => $exit, 'align' => 'center'),
    );

    $output = check_markup(variable_get('disclaimer_content', ''), variable_get('disclaimer_content_format', 1), 1);
    $output .= theme('table', array(), $rows);
    $output .= check_markup(variable_get('disclaimer_content_footer', ''), variable_get('disclaimer_content_footer_format', 1), 1);

    return $output;
}

/**
 * Generate js function
 */
function _disclaimer_get_js() {
  $cookie_path = variable_get('disclaimer_cookie_path', '/');
  $cookie_expires = variable_get('disclaimer_cookie_expires', '');
  $cookie_domain = variable_get('disclaimer_cookie_domain', '');
  $cookie_secure = variable_get('disclaimer_cookie_secure', 'false');
  $debug = variable_get('disclaimer_debug', 'false');
  $width = variable_get('disclaimer_width', 400);
  $height = variable_get('disclaimer_height', 300);
  $padding = variable_get('disclaimer_padding', 20);
  $bgcolor = variable_get('disclaimer_bgcolor', '000000');
  
  $js = 'function WriteCookie(nom, valeur){
           var argv=WriteCookie.arguments;
           var argc=WriteCookie.arguments.length;
           var expires=(argc > 2) ? argv[2] : null;
           var secure=(argc > 5) ? argv[5] : false;'."\n";
  if (empty($cookie_path)) {
    $js .= 'var path=(argc > 3) ? argv[3] : null;'."\n";
  }
  if (empty($cookie_domain)) {
    $js .= 'var domain=(argc > 4) ? argv[4] : null;'."\n";
  }
    $js .= 'document.cookie=nom+"="+escape(valeur)+'."\n";
    $js .= '((expires==null) ? "" : ("; expires="+expires.toGMTString()))+'."\n";
  if (empty($cookie_path)) {
    $js .= '((path==null) ? "" : ("; path="+path))+'."\n";
  }
  else {
    $js .= '("; path='. $cookie_path .'")+'."\n";
  }
  if (empty($cookie_domain)) {
    $js .= '((domain==null) ? "" : ("; domain="+domain))+'."\n";
  }
  else {
    $js .= '("; domain='. $cookie_domain .'")+'."\n";
  }
  $js .= '((secure==true) ? "; secure" : "");}'."\n";

  $js .= 'if (ReadCookie("'. variable_get('disclaimer_cookie_name', 'disclaimerShow') .'") == null) {
            $(document).ready(
                function(){ 
                    $(\'#disclaimer\').nyroModalManual({modal: true, minWidth: '. $width .', minHeight: '. $height .', padding: '. $padding .', debug: '. $debug .', bgColor: \'#'. $bgcolor .'\'}); 
                }
            );
        }';
  return $js;
}

