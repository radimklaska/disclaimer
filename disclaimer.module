<?php
// $Id$
/**
 * @file
 * Create and show disclaimer for your site.
 * Visotors need js enabled and accept cookie
 *
 * This module is for Drupal 6.x only.
 *
 * Module by: Mog
 * Mailto: tech@arthura.fr
 *
 */

/**
 * Implementation of hook_menu().
 */
function disclaimer_menu() {
  $items = array();
    // disclaimer page
    $items['disclaimer'] = array(
      'title' => 'Disclaimer',
      'page callback' => '_disclaimer_get_content',
      'access arguments' => array('access content'),
      'type' => MENU_SUGGESTED_ITEM,
    );
    // configuration page of the Disclaimer module
    $items['admin/settings/disclaimer'] = array(
      'title' => 'Disclaimer',
      'description' => 'Administer Disclaimer settings.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('disclaimer_admin_settings'),
      'access callback' => 'user_access',
      'accesss arguments' => array('administer disclaimer settings'),
      'file' => 'disclaimer.admin.inc',
    );

  return $items;
}

/**
 * Implementation of hook_init().
 */
function disclaimer_init() {
  global $user;
  if ((!user_access('bypass disclaimer') || (variable_get('disclaimer_logged', 1) == 1 && $user->uid)) && (_disclaimer_visibility() == 1)) {
    $path = drupal_get_path('module', 'disclaimer');
    if (variable_get('disclaimer_modal', 'nyroModal') == 'nyroModal') {
      $path_css = '/nyroModal/styles/nyroModal.css';
      $path_js = '/nyroModal/js/jquery.nyroModal.js';
    }
    else {
      $path_css = '/jqModal/jqModal.css';
      $path_js = '/jqModal/jqModal.js';
    }
    if (file_exists($path . $path_css)) {
      drupal_add_css(drupal_get_path('module', 'disclaimer') . $path_css);
    }
    if (file_exists($path . $path_js)) {
      drupal_add_js(drupal_get_path('module', 'disclaimer') . $path_js);
    }
    drupal_add_js(drupal_get_path('module', 'disclaimer') .'/disclaimer.js', 'module', variable_get('disclaimer_location_js', 'header'));
    drupal_add_js(_disclaimer_get_js(), 'inline', variable_get('disclaimer_location_js', 'header'));
  }
}

/**
 * Implementation of hook_perm().
 */
function disclaimer_perm() {
  return array('administer disclaimer settings', 'bypass disclaimer');
}

/**
 * Declare footer hook
 * @return string A string containing HTML to be inserted
 */
function disclaimer_footer() {
  global $user;
  if (!user_access('bypass disclaimer') || (variable_get('disclaimer_logged', 1) == 1 && $user->uid)) {
    if (variable_get('disclaimer_modal', 'nyroModal') == 'jqModal') {
      $output = '<div id="disclaimer" style="display:none;" class="jqmWindow">&nbsp</div>';
    }
    else {
    $output = '<div>'. l('&nbsp;', 'disclaimer', array('attributes' => array('id' => 'disclaimer', 'style' => 'display:none;'), 'html' => TRUE)) .'</div>';
    }
  }
  return $output;
}

/**
 * Generate disclaimer content
 */
function _disclaimer_get_content() {
    $action_type = variable_get('disclaimer_action_type', 'text');
    $exit_url = variable_get('disclaimer_exit_url', 'http://www.google.com');
    $enter_url = variable_get('disclaimer_enter_url', '');
    $nid = variable_get('disclaimer_node', '');
    $nid_footer = variable_get('disclaimer_node_footer', '');
    $age = variable_get('disclaimer_age_form', 0);
    $age_limit = variable_get('disclaimer_age_limit', 18);
    $modal = variable_get('disclaimer_modal', 'nyroModal');
    $js = '';

    switch ($action_type) {
        case "image":
          $enter_alt = variable_get('disclaimer_enter_img_alt', t('ENTER'));
          $exit_alt = variable_get('disclaimer_exit_img_alt', t('EXIT'));
          $enter = theme('image', 'files/'. variable_get('disclaimer_enter_img', 'enter.png'), $enter_alt, $enter_alt);
          $exit = theme('image', 'files/'. variable_get('disclaimer_exit_img', 'exit.png'), $exit_alt, $exit_alt);
        break;
        default:
          $enter = variable_get('disclaimer_enter_txt', t('ENTER'));
          $exit = variable_get('disclaimer_exit_txt', t('EXIT'));
    }

    if ($age == 1) {
      $age_form = drupal_get_form('disclaimer_age_form');
      $rows[] = array(
        array('data' => $age_form, 'align' => 'center', 'colspan' => '2')
      );
      $js = "CheckAge('". variable_get('disclaimer_cookie_name', 'disclaimerShow') ."', ". $age_limit .", '". $exit_url ."', '". $modal ."');";
    }
    else {
      $js = 'WriteCookie(\''. variable_get('disclaimer_cookie_name', 'disclaimerShow') .'\', \'1\');';
      if ($modal == 'nyroModal') {
        $js .= '$.nyroModalRemove();';
      }
      else {
        $js .= '$(\'#disclaimer\').jqmHide();';
      }
    }

    if ($enter_url) {
      $enter = l($enter, $enter_url, array('attributes' => array('onclick' => $js), 'html' => TRUE));
    }
    else {
      $enter = '<a href="javascript:void(0);" onclick="'. $js .'">'. $enter .'</a>';
    }
    $exit = l($exit, $exit_url, array('html' => TRUE));

    $rows[] = array(
      array('data' => $enter, 'align' => 'center'),
      array('data' => $exit, 'align' => 'center'),
    );
    if ($nid == 0) {
      $output = check_markup(variable_get('disclaimer_content', ''), variable_get('disclaimer_content_format', 1), 1);
    }
    else {
      $output = node_view(node_load($nid), FALSE, TRUE);
    }
    $output .= theme('table', array(), $rows);
    if ($nid_footer == 0) {
      $output .= check_markup(variable_get('disclaimer_content_footer', ''), variable_get('disclaimer_content_footer_format', 1), 1);
    }
    else {
      $output .= node_view(node_load($nid_footer), FALSE, TRUE);
    }

    return $output;
}

/**
 * Generate js function
 */
function _disclaimer_get_js() {
  $cookie_path = variable_get('disclaimer_cookie_path', '/');
  $cookie_expires = variable_get('disclaimer_cookie_expires', '');
  $cookie_domain = variable_get('disclaimer_cookie_domain', '');
  $modal = variable_get('disclaimer_modal', 'nyroModal');
  if ($modal == 'nyroModal') {
    $debug = variable_get('disclaimer_debug', 'false');
    $width = variable_get('disclaimer_width', 400);
    $height = variable_get('disclaimer_height', 300);
    $padding = variable_get('disclaimer_padding', 20);
    $bgcolor = variable_get('disclaimer_bgcolor', '000000');
  }
  else {
    $overlay = variable_get('disclaimer_jqmodal_overlay', 90);
  }
  $js = 'function WriteCookie(nom, valeur){'."\n";
  $js .= 'var argv=WriteCookie.arguments;'."\n";
  $js .= 'var argc=WriteCookie.arguments.length;'."\n";
  $js .= 'var expires=(argc > 2) ? argv[2] : null;'."\n";
  $js .= 'var secure=(argc > 5) ? argv[5] : false;'."\n";
  if (empty($cookie_path)) {
    $js .= 'var path=(argc > 3) ? argv[3] : null;'."\n";
  }
  if (empty($cookie_domain)) {
    $js .= 'var domain=(argc > 4) ? argv[4] : null;'."\n";
  }
    $js .= 'document.cookie=nom+"="+escape(valeur)+'."\n";
    $js .= '((expires==null) ? "" : ("; expires="+expires.toGMTString()))+'."\n";
  if (empty($cookie_path)) {
    $js .= '((path==null) ? "" : ("; path="+path))+'."\n";
  }
  else {
    $js .= '("; path='. $cookie_path .'")+'."\n";
  }
  if (empty($cookie_domain)) {
    $js .= '((domain==null) ? "" : ("; domain="+domain))+'."\n";
  }
  else {
    $js .= '("; domain='. $cookie_domain .'")+'."\n";
  }
  $js .= '((secure==true) ? "; secure" : "");}'."\n";

  $js .= 'if (ReadCookie("'. variable_get('disclaimer_cookie_name', 'disclaimerShow') .'") == null) {';
  $js .= '$(document).ready(function(){';
  if ($modal == 'nyroModal') {
    $js .= '$(\'#disclaimer\').nyroModalManual({modal:true, minWidth:'. $width .', minHeight:'. $height .', padding:'. $padding .', debug:'. $debug .', bgcolor:\'#'. $bgcolor .'\'});';
  }
  else {
    $js .= '$(\'#disclaimer\').jqm({ajax:\''. base_path() .'/disclaimer\', overlay:'. $overlay .', modal:true}).jqmShow();';
  }
  $js .= '});}';
  return $js;
}

/**
 * Calculate visibility of disclaimer if set
 * function copy from block.module, thanks for the original code.
 * @return bolean
 */
function _disclaimer_visibility() {
  $visibility = variable_get('disclaimer_visibility', 0);
  $pages = variable_get('disclaimer_pages', '');

  if ($pages) {
    if ($visibility < 2) {
      $path = drupal_get_path_alias($_GET['q']);
      $page_match = drupal_match_path($path, $pages);
      if ($path != $_GET['q']) {
        $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
      }
      $page_match = !($visibility xor $page_match);
    }
    else {
      $page_match = drupal_eval($pages);
    }
  }
  else {
    $page_match = TRUE;
  }
  return $page_match;
}

/**
 * function to set age form on disclaimer
 * @return array an array of forms
 */
function disclaimer_age_form() {
  $form['disclaimer_age'] = array(
    '#type' => 'date',
    '#title' => t('Date of Birth'),
    '#description' => t('You must be at least @age years old to visit @site.', array('@age' => variable_get('disclaimer_age_limit', 18), '@site' => variable_get('site_name', ''))),
  );
  return $form;
}
